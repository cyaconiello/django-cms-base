<% if node[:nginx_uwsgi_vhost][:redirected_server_names].length > 0 %>
server {
  listen 80;
  
  server_name<% for server_name in node[:nginx_uwsgi_vhost][:redirected_server_names] %> <%= server_name %><% end %>;
  
  rewrite ^ http<% if node[:nginx_uwsgi_vhost][:force_ssl] %>s<% end %>://<%= node[:app][:name] %>$request_uri? permanent;
}
<% end%>
server {
    listen 80;

    server_name <%= node[:app][:name] %>;
    
    client_max_body_size 50M;

    access_log <%= node[:app][:paths][:site] %>/logs/access.log;
    error_log  <%= node[:app][:paths][:site] %>/logs/error.log;
    <% if node[:nginx_uwsgi_vhost][:force_ssl] %>
    if ($http_x_forwarded_proto != 'https') {
        rewrite ^ https://<%= node[:app][:name] %>$request_uri? permanent;
    }
    <% end %>
    # no security problem here, since / is alway passed to upstream
    root <%= node[:app][:paths][:site] %>;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    <% for location in node[:nginx_uwsgi_vhost][:locations] %>
    location <%= location %> {
        # if asset versioning is used
        if ($query_string) {
            expires max;
        }
    }
    <% end %>
    location / {
        uwsgi_pass   unix://<%= node[:nginx_uwsgi_vhost][:upstream] %>;
        include      uwsgi_params;
    }

    # what to serve if upstream is not available or crashes
    <% for page in node[:nginx_uwsgi_vhost][:error_pages] %>
    error_page <%= page[:code] %> <%= page[:location] %>;
    <% end %>
}